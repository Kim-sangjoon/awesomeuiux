{"version":3,"file":"static/js/92.084c5d8f.chunk.js","mappings":"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","sources":["components/component/CopyButton.js","components/page/MainComponentPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Snackbar, IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst CopyButton = ({code}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'slickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    }\r\n    const action = (\r\n        <>\r\n            <IconButton\r\n                size='small'\r\n                aria-label='close'\r\n                color='inherit'\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize='small'/>\r\n            </IconButton>\r\n        </>\r\n    )\r\n    const buttomPosition = {\r\n        position: 'absolute',\r\n        right: '1px',\r\n        bottom: '1px',\r\n        backgroundColor: '#000',\r\n        color: '#fff',\r\n        boxShadow: 'none',\r\n        borderTopLeftRadius: '5px',\r\n        borderTopRightRadius: '0px',\r\n        borderBottomRightRadius: '4px',\r\n        borderBottomleftRadius: '0px',\r\n        textTransform: 'initial',\r\n        '&:hover': {\r\n            backgroundColor: '#000'\r\n        }\r\n    }\r\n    const copyCode = () => {\r\n        try {\r\n            if (navigator.clipboard) {\r\n                navigator.clipboard.writeText(code).then(function() {\r\n                    console.log('https에서 클립보드 복사 성공!!!');\r\n                });\r\n                handleClick();\r\n            } else {\r\n                if (!document.queryCommandSupported(\"copy\")) {\r\n                    return alert(\"코드복사 기능이 지원되지 않는 브라우저 입니다!\")\r\n                }\r\n                const textarea = document.createElement(\"textarea\");\r\n                textarea.value = code;\r\n                textarea.style.top = 0;\r\n                textarea.style.left = 0;\r\n                textarea.style.position = \"fixed\";\r\n                document.body.appendChild(textarea);\r\n                textarea.focus();\r\n                textarea.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(textarea);\r\n                console.log('http에서 클립보드 복사 성공');\r\n                handleClick();\r\n            }\r\n        } catch (e) {\r\n            console.error('error', e);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Button variant='contained' size='small' sx={buttomPosition} onClick={copyCode}>Copy</Button>\r\n            <Snackbar \r\n                open={open}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                message=\"코드복사!! [Ctrl + V]로 원하는 곳에 붙여넣기 하세요.\"\r\n                action={action}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CopyButton;","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { \r\n  Box,\r\n  Button,\r\n  Toolbar,\r\n  Grid,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Stack\r\n} from '@mui/material';\r\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from \"react-live\";\r\nimport CopyButton from '../component/CopyButton';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst scope = { \r\n    Box,\r\n    Button,\r\n    Toolbar,\r\n    Grid,\r\n    Paper,\r\n    Tabs,\r\n    Tab,\r\n    Stack\r\n};\r\nconst leftComponentBox = {border: '1px solid #ddd', boxShadow: 'none', height: '300px', overflowY: 'auto', display:'flex', justifyContent: 'center', alignItems: 'center', textAlign: 'center'}\r\nconst rightCodeBox = {border: '1px solid #ddd', boxShadow: 'none', height: '300px', backgroundColor: 'rgb(29, 31, 33)', overflowY: 'auto', textAlign: 'left'}\r\nconst code01=`<div className='code-sample'>\r\n    <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\r\n        <Button variant=\"text\">Button</Button>\r\n        <Button variant=\"contained\">Button</Button>\r\n        <Button variant=\"outlined\">Button</Button>\r\n    </Stack>\r\n</div>\r\n`;\r\n\r\nconst MainComponentPage = (props) => {\r\n    React.useEffect(()=> {\r\n        handleScrollTop();\r\n    },[])\r\n    const [toast, setToast] = React.useState(false);\r\n    const handleToast = () => {\r\n        setToast(!toast)\r\n    }\r\n\r\n    const [TabValue, setTabValue] = React.useState(0); //탭컨트롤러 상태 0,1,2,3\r\n    const sFix = 90;\r\n    const tab01 = 0;\r\n    const tab02 = 475;\r\n    const tab03 = 895;\r\n    const tab04 = 1080;\r\n\r\n    const handleTabChange = (event, newTabValue) => {\r\n        if (newTabValue === 0) {\r\n            window.scrollTo({\r\n                top: tab01 + 1,\r\n                behavior: \"smooth\"\r\n            });\r\n        } else if (newTabValue === 1) {\r\n            window.scrollTo({\r\n                top: tab02 + 1,\r\n                behavior: \"smooth\"\r\n            });\r\n        } else if (newTabValue === 2) {\r\n            window.scrollTo({\r\n                top: tab03 + 1,\r\n                behavior: \"smooth\"\r\n            });\r\n        } else if (newTabValue === 3) {\r\n            window.scrollTo({\r\n                top: tab04 + 1,\r\n                behavior: \"smooth\"\r\n            });\r\n        }\r\n    };\r\n\r\n    //탭컨트롤러 스크롤\r\n    const tabRef = React.useRef(null);\r\n    const handleScroll = () => {\r\n        let scValue = window.scrollY;\r\n        console.log(\"현재좌표\" + scValue);\r\n        if (scValue === 0) {\r\n            document.getElementsByClassName('top-button')[0].classList.remove('show');\r\n        } else {\r\n            document.getElementsByClassName('top-button')[0].classList.add('show');\r\n        }\r\n        if (scValue > sFix) {\r\n            tabRef.current.classList.add('fixed'); \r\n            if(scValue > tab01 && scValue < tab02){\r\n                setTabValue(0);\r\n            } else if(scValue > tab02 && scValue < tab03){\r\n                setTabValue(1);\r\n            } else if(scValue > tab03 && scValue < tab04){\r\n                setTabValue(2);\r\n            } else if(scValue > tab04){\r\n                setTabValue(3);\r\n            }\r\n        } else if (scValue < sFix) {\r\n            if (tabRef.current) {\r\n                tabRef.current.classList.remove('fixed');\r\n            }\r\n        }\r\n    };\r\n\r\n    // 탭 컨트롤 하는 함수\r\n    React.useEffect(()=> {\r\n        const timer = setInterval(() => {\r\n            window.addEventListener(\"scroll\", handleScroll);\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(timer);\r\n            window.removeEventListener(\"scroll\", handleScroll);\r\n        }\r\n    },[])\r\n\r\n    //스크롤 top 컨트롤\r\n    const handleScrollTop = () => {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box className='contentboxwrap'>\r\n                <Toolbar />\r\n                <Box>\r\n                    <h1>컴포넌트</h1>\r\n                    <Tabs className='contentTab' ref={tabRef} value={TabValue} variant=\"scrollable\" scrollButtons=\"auto\" onChange={handleTabChange} sx={{backgroundColor: 'rgb(255 255 255 / 60%)'}}>\r\n                        <Tab label=\"Button\" />\r\n                        <Tab label=\"Checkbox\" />\r\n                        <Tab label=\"Radio Group\" />\r\n                        <Tab label=\"Select\" />\r\n                        <Tab label=\"Text Field\" />\r\n                        <Tab label=\"List\" />\r\n                        <Tab label=\"Table\" />\r\n                        <Tab label=\"Tooltip\" />\r\n                        <Tab label=\"Alert\" />\r\n                        <Tab label=\"Dialog\" />\r\n                        <Tab label=\"Accordion\" />\r\n                        <Tab label=\"Pagination\" />\r\n                        <Tab label=\"Tabs\" />\r\n                        <Tab label=\"Modal\" />\r\n                        <Tab label=\"Date Pickers\" />\r\n                    </Tabs>\r\n                    <Box className='tab-item'>\r\n                        <h2>버튼</h2>\r\n                        <p className='contText'>버튼 컴포넌트</p>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                            <Grid container spacing={2}>\r\n                                <LiveProvider code={code01} scope={scope}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Item sx={leftComponentBox}>\r\n                                            <LivePreview />\r\n                                            <LiveError />\r\n                                        </Item>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6} sx={{position: 'relative'}}>\r\n                                        <Item sx={rightCodeBox}>\r\n                                            <LiveEditor />\r\n                                        </Item>\r\n                                        <CopyButton onClick={handleToast} code={code01} />\r\n                                    </Grid>\r\n                                </LiveProvider>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className='tab-item'>\r\n                        <h2>버튼</h2>\r\n                        <p className='contText'>버튼 컴포넌트</p>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                            <Grid container spacing={2}>\r\n                                <LiveProvider code={code01} scope={scope}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Item sx={leftComponentBox}>\r\n                                            <LivePreview />\r\n                                            <LiveError />\r\n                                        </Item>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6} sx={{position: 'relative'}}>\r\n                                        <Item sx={rightCodeBox}>\r\n                                            <LiveEditor />\r\n                                        </Item>\r\n                                        <CopyButton onClick={handleToast} code={code01} />\r\n                                    </Grid>\r\n                                </LiveProvider>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className='tab-item'>\r\n                        <h2>버튼</h2>\r\n                        <p className='contText'>버튼 컴포넌트</p>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                            <Grid container spacing={2}>\r\n                                <LiveProvider code={code01} scope={scope}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Item sx={leftComponentBox}>\r\n                                            <LivePreview />\r\n                                            <LiveError />\r\n                                        </Item>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6} sx={{position: 'relative'}}>\r\n                                        <Item sx={rightCodeBox}>\r\n                                            <LiveEditor />\r\n                                        </Item>\r\n                                        <CopyButton onClick={handleToast} code={code01} />\r\n                                    </Grid>\r\n                                </LiveProvider>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className='tab-item'>\r\n                        <h2>버튼</h2>\r\n                        <p className='contText'>버튼 컴포넌트</p>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                            <Grid container spacing={2}>\r\n                                <LiveProvider code={code01} scope={scope}>\r\n                                    <Grid item xs={12} md={6}>\r\n                                        <Item sx={leftComponentBox}>\r\n                                            <LivePreview />\r\n                                            <LiveError />\r\n                                        </Item>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={6} sx={{position: 'relative'}}>\r\n                                        <Item sx={rightCodeBox}>\r\n                                            <LiveEditor />\r\n                                        </Item>\r\n                                        <CopyButton onClick={handleToast} code={code01} />\r\n                                    </Grid>\r\n                                </LiveProvider>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className='bottom-last'></Box>\r\n                </Box>\r\n                <Box className='top-button' onClick={handleScrollTop}>TOP</Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainComponentPage;"],"names":["_ref","code","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClick","handleClose","event","reason","action","_jsx","_Fragment","children","IconButton","size","color","onClick","CloseIcon","fontSize","_jsxs","Button","variant","sx","position","right","bottom","backgroundColor","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomleftRadius","textTransform","navigator","clipboard","writeText","then","console","log","document","queryCommandSupported","alert","textarea","createElement","value","style","top","left","body","appendChild","focus","select","execCommand","removeChild","e","error","Snackbar","autoHideDuration","onClose","message","Item","styled","Paper","theme","_objectSpread","palette","mode","typography","body2","padding","spacing","text","secondary","scope","Box","Toolbar","Grid","Tabs","Tab","Stack","leftComponentBox","border","height","overflowY","display","justifyContent","alignItems","textAlign","rightCodeBox","code01","props","React","handleScrollTop","_React$useState","_React$useState2","toast","setToast","handleToast","_React$useState3","_React$useState4","TabValue","setTabValue","tab04","tabRef","handleScroll","scValue","window","scrollY","getElementsByClassName","classList","remove","add","current","timer","setInterval","addEventListener","clearInterval","removeEventListener","scrollTo","behavior","className","ref","scrollButtons","onChange","newTabValue","tab01","tab02","tab03","label","flexGrow","container","LiveProvider","item","xs","md","LivePreview","LiveError","LiveEditor","CopyButton"],"sourceRoot":""}