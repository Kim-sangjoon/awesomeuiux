{"version":3,"file":"static/js/682.f00c802a.chunk.js","mappings":"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","sources":["components/component/CopyButton.js","components/page/MainWebChartPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Snackbar, IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst CopyButton = ({code}) => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'slickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    }\r\n    const action = (\r\n        <>\r\n            <IconButton\r\n                size='small'\r\n                aria-label='close'\r\n                color='inherit'\r\n                onClick={handleClose}\r\n            >\r\n                <CloseIcon fontSize='small'/>\r\n            </IconButton>\r\n        </>\r\n    )\r\n    const buttomPosition = {\r\n        position: 'absolute',\r\n        right: '1px',\r\n        bottom: '1px',\r\n        backgroundColor: '#000',\r\n        color: '#fff',\r\n        boxShadow: 'none',\r\n        borderTopLeftRadius: '5px',\r\n        borderTopRightRadius: '0px',\r\n        borderBottomRightRadius: '4px',\r\n        borderBottomleftRadius: '0px',\r\n        textTransform: 'initial',\r\n        '&:hover': {\r\n            backgroundColor: '#000'\r\n        }\r\n    }\r\n    const copyCode = () => {\r\n        try {\r\n            if (navigator.clipboard) {\r\n                navigator.clipboard.writeText(code).then(function() {\r\n                    console.log('https에서 클립보드 복사 성공!!!');\r\n                });\r\n                handleClick();\r\n            } else {\r\n                if (!document.queryCommandSupported(\"copy\")) {\r\n                    return alert(\"코드복사 기능이 지원되지 않는 브라우저 입니다!\")\r\n                }\r\n                const textarea = document.createElement(\"textarea\");\r\n                textarea.value = code;\r\n                textarea.style.top = 0;\r\n                textarea.style.left = 0;\r\n                textarea.style.position = \"fixed\";\r\n                document.body.appendChild(textarea);\r\n                textarea.focus();\r\n                textarea.select();\r\n                document.execCommand(\"copy\");\r\n                document.body.removeChild(textarea);\r\n                console.log('http에서 클립보드 복사 성공');\r\n                handleClick();\r\n            }\r\n        } catch (e) {\r\n            console.error('error', e);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Button variant='contained' size='small' sx={buttomPosition} onClick={copyCode}>Copy</Button>\r\n            <Snackbar \r\n                open={open}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                message=\"코드복사!! [Ctrl + V]로 원하는 곳에 붙여넣기 하세요.\"\r\n                action={action}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CopyButton;","import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport { \r\n  Box,\r\n  Toolbar,\r\n  Grid,\r\n  Paper\r\n} from '@mui/material';\r\nimport { PieChart, Pie } from \"recharts\";\r\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from \"react-live\";\r\nimport CopyButton from '../component/CopyButton';\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n  ...theme.typography.body2,\r\n  padding: theme.spacing(1),\r\n  textAlign: 'center',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst leftComponentBox = {border: '1px solid #ddd', boxShadow: 'none', height: '400px', overflowY: 'auto', display:'flex', justifyContent: 'start', alignItems: 'start', textAlign: 'center'}\r\nconst rightCodeBox = {border: '1px solid #ddd', boxShadow: 'none', height: '400px', backgroundColor: 'rgb(29, 31, 33)', overflowY: 'auto', textAlign: 'left'}\r\n\r\n// const data01 = [\r\n//     { name: \"Group A\", value: 400 },\r\n//     { name: \"Group B\", value: 300 },\r\n//     { name: \"Group C\", value: 300 },\r\n//     { name: \"Group D\", value: 200 }\r\n// ];\r\n// const data02 = [\r\n//     { name: \"A1\", value: 100 },\r\n//     { name: \"A2\", value: 300 },\r\n//     { name: \"B1\", value: 100 },\r\n//     { name: \"B2\", value: 80 },\r\n//     { name: \"B3\", value: 40 },\r\n//     { name: \"B4\", value: 30 },\r\n//     { name: \"B5\", value: 50 },\r\n//     { name: \"C1\", value: 100 },\r\n//     { name: \"C2\", value: 200 },\r\n//     { name: \"D1\", value: 150 },\r\n//     { name: \"D2\", value: 50 }\r\n// ];\r\nconst scope = { \r\n    PieChart, \r\n    Pie,\r\n    Box,\r\n    Toolbar,\r\n    Grid,\r\n    Paper,\r\n};\r\nconst code01 = `<PieChart width={300} height={300}>\r\n<Pie\r\n    data={[\r\n        { name: \"Group A\", value: 400 },\r\n        { name: \"Group B\", value: 300 },\r\n        { name: \"Group C\", value: 300 },\r\n        { name: \"Group D\", value: 200 }\r\n    ]}\r\n    dataKey=\"value\"\r\n    cx={150}\r\n    cy={150}\r\n    outerRadius={60}\r\n    fill=\"#8884d8\"\r\n/>\r\n<Pie\r\n    data={[\r\n        { name: \"A1\", value: 100 },\r\n        { name: \"A2\", value: 300 },\r\n        { name: \"B1\", value: 100 },\r\n        { name: \"B2\", value: 80 },\r\n        { name: \"B3\", value: 40 },\r\n        { name: \"B4\", value: 30 },\r\n        { name: \"B5\", value: 50 },\r\n        { name: \"C1\", value: 100 },\r\n        { name: \"C2\", value: 200 },\r\n        { name: \"D1\", value: 150 },\r\n        { name: \"D2\", value: 50 }\r\n    ]}\r\n    dataKey=\"value\"\r\n    cx={150}\r\n    cy={150}\r\n    innerRadius={70}\r\n    outerRadius={90}\r\n    fill=\"#82ca9d\"\r\n    label\r\n/>\r\n</PieChart>`;\r\n\r\n// const MyPieChart = () => {\r\n//     return(\r\n//         <PieChart width={300} height={300}>\r\n//             <Pie\r\n//                 data={data01}\r\n//                 dataKey=\"value\"\r\n//                 cx={150}\r\n//                 cy={150}\r\n//                 outerRadius={60}\r\n//                 fill=\"#8884d8\"\r\n//             />\r\n//             <Pie\r\n//                 data={data02}\r\n//                 dataKey=\"value\"\r\n//                 cx={150}\r\n//                 cy={150}\r\n//                 innerRadius={70}\r\n//                 outerRadius={90}\r\n//                 fill=\"#82ca9d\"\r\n//                 label\r\n//             />\r\n//         </PieChart>\r\n// )}\r\n\r\nconst MainWebChartPage = (props) => {\r\n    React.useEffect(()=> {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    },[])\r\n    const [toast, setToast] = React.useState(false);\r\n    const handleToast = () => {\r\n        setToast(!toast)\r\n    }\r\n\r\n    function handleScrollTop() {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            <Box className='contentboxwrap'>\r\n                <Toolbar />\r\n                <Box>\r\n                <h1>웹차트</h1>\r\n                <h2>2Depth</h2>\r\n                <p className='contText'>차트 컴포넌트</p>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                        <Grid container spacing={2}>\r\n                            <LiveProvider code={code01} scope={scope}>\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Item sx={leftComponentBox}>\r\n                                        <LivePreview />\r\n                                        <LiveError />\r\n                                        {/* <MyPieChart /> */}\r\n                                    </Item>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={6} sx={{position: 'relative'}}>\r\n                                    <Item sx={rightCodeBox}>\r\n                                        <LiveEditor />\r\n                                    </Item>\r\n                                    <CopyButton onClick={handleToast} code={code01} />\r\n                                </Grid>\r\n                            </LiveProvider>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box className='bottom-last'></Box>\r\n                </Box>\r\n                <Box className='top-button' onClick={handleScrollTop}>TOP</Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainWebChartPage;"],"names":["_ref","code","_useState","useState","_useState2","_slicedToArray","open","setOpen","handleClick","handleClose","event","reason","action","_jsx","_Fragment","children","IconButton","size","color","onClick","CloseIcon","fontSize","_jsxs","Button","variant","sx","position","right","bottom","backgroundColor","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomleftRadius","textTransform","navigator","clipboard","writeText","then","console","log","document","queryCommandSupported","alert","textarea","createElement","value","style","top","left","body","appendChild","focus","select","execCommand","removeChild","e","error","Snackbar","autoHideDuration","onClose","message","Item","styled","Paper","theme","_objectSpread","palette","mode","typography","body2","padding","spacing","textAlign","text","secondary","leftComponentBox","border","height","overflowY","display","justifyContent","alignItems","rightCodeBox","scope","PieChart","Pie","Box","Toolbar","Grid","code01","props","React","window","scrollTo","behavior","_React$useState","_React$useState2","toast","setToast","className","flexGrow","container","LiveProvider","item","xs","md","LivePreview","LiveError","LiveEditor","CopyButton"],"sourceRoot":""}