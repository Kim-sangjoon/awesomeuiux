{"version":3,"file":"static/js/231.3ae1785a.chunk.js","mappings":"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","sources":["components/component/CopyButton.js","components/page/MainWebGridPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Snackbar, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CopyButton = ({code}) => {\n    const [open, setOpen] = useState(false);\n    const handleClick = () => {\n        setOpen(true)\n    }\n    const handleClose = (event, reason) => {\n        if (reason === 'slickaway') {\n            return;\n        }\n        setOpen(false);\n    }\n    const action = (\n        <>\n            <IconButton\n                size='small'\n                aria-label='close'\n                color='inherit'\n                onClick={handleClose}\n            >\n                <CloseIcon fontSize='small'/>\n            </IconButton>\n        </>\n    )\n    const buttomPosition = {\n        position: 'absolute',\n        right: '1px',\n        bottom: '1px',\n        backgroundColor: '#000',\n        color: '#fff',\n        boxShadow: 'none',\n        borderTopLeftRadius: '5px',\n        borderTopRightRadius: '0px',\n        borderBottomRightRadius: '4px',\n        borderBottomleftRadius: '0px',\n        textTransform: 'initial',\n        '&:hover': {\n            backgroundColor: '#000'\n        }\n    }\n    const copyCode = () => {\n        try {\n            if (navigator.clipboard) {\n                navigator.clipboard.writeText(code).then(function() {\n                    console.log('https에서 클립보드 복사 성공!!!');\n                });\n                handleClick();\n            } else {\n                if (!document.queryCommandSupported(\"copy\")) {\n                    return alert(\"코드복사 기능이 지원되지 않는 브라우저 입니다!\")\n                }\n                const textarea = document.createElement(\"textarea\");\n                textarea.value = code;\n                textarea.style.top = 0;\n                textarea.style.left = 0;\n                textarea.style.position = \"fixed\";\n                document.body.appendChild(textarea);\n                textarea.focus();\n                textarea.select();\n                document.execCommand(\"copy\");\n                document.body.removeChild(textarea);\n                console.log('http에서 클립보드 복사 성공');\n                handleClick();\n            }\n        } catch (e) {\n            console.error('error', e);\n        }\n    };\n    return (\n        <>\n            <Button variant='contained' size='small' sx={buttomPosition} onClick={copyCode}>Copy</Button>\n            <Snackbar \n                open={open}\n                autoHideDuration={4000}\n                onClose={handleClose}\n                message=\"코드복사!! [Ctrl + V]로 원하는 곳에 붙여넣기 하세요.\"\n                action={action}\n            />\n        </>\n    );\n};\n\nexport default CopyButton;","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { \n  Box,\n  Toolbar,\n  Grid,\n  Paper\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from \"react-live\";\nimport CopyButton from '../component/CopyButton';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  color: theme.palette.text.secondary,\n}));\n\nconst leftComponentBox = {border: '1px solid #ddd', boxShadow: 'none', height: '400px', overflowY: 'auto', display:'flex', justifyContent: 'start', alignItems: 'start', textAlign: 'center'}\nconst rightCodeBox = {border: '1px solid #ddd', boxShadow: 'none', height: '400px', backgroundColor: 'rgb(29, 31, 33)', overflowY: 'auto', textAlign: 'left'}\n// const rows = [\n//     { id: 1, col1: 'Hello', col2: 'World' },\n//     { id: 2, col1: 'DataGridPro', col2: 'is Awesome' },\n//     { id: 3, col1: 'MUI', col2: 'is Amazing' },\n//   ];\n  \n// const columns = [\n//     { field: 'col1', headerName: 'Column 1', width: 150 },\n//     { field: 'col2', headerName: 'Column 2', width: 150 },\n// ];\n\nconst scope = { \n    Box,\n    Toolbar,\n    Grid,\n    Paper,\n    Item,\n    DataGrid\n};\n\nconst code01 =`<Box>\n<DataGrid\n    rows={[\n        { id: 1, col1: 'Hello', col2: 'World' },\n        { id: 2, col1: 'DataGrid', col2: 'is Awesome' },\n        { id: 3, col1: 'Awesome UI', col2: 'is Amazing' },\n        { id: 4, col1: 'Kim Sangjoon', col2: 'is Good' },\n        { id: 5, col1: 'AAA', col2: 'is BBB' },\n        { id: 6, col1: 'BBB', col2: 'is CCC' },\n        { id: 7, col1: 'CCC', col2: 'is DDD' },\n        { id: 8, col1: 'DDD', col2: 'is EEE' },\n        { id: 9, col1: 'EEE', col2: 'is FFF' },\n        { id: 10, col1: 'FFF', col2: 'is GGG' },\n    ]}                 \n    columns={[\n        { field: 'col1', headerName: 'Column 1', width: 150 },\n        { field: 'col2', headerName: 'Column 2', width: 150 }\n    ]}\n/>\n</Box>`;\n\n\n\nconst MainWebGridPage = (props) => {\n    React.useEffect(()=> {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    },[])\n    const [toast, setToast] = React.useState(false);\n    const handleToast = () => {\n        setToast(!toast)\n    }\n\n    function handleScrollTop() {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n    return (\n        <>\n            <Box className='contentboxwrap'>\n                <Toolbar />\n                <Box>\n                <h1>Data-Grid</h1>\n                <h2>2Depth</h2>\n                <p className='contText'>그리드 컴포넌트</p>\n                    <Box sx={{ flexGrow: 1 }}>\n                        <Grid container spacing={2}>\n                            <LiveProvider code={code01} scope={scope}>\n                                <Grid item xs={12} md={6}>\n                                    <Item sx={leftComponentBox}>\n                                        {/* <DataGrid rows={rows} columns={columns} /> */}\n                                        <LivePreview />\n                                        <LiveError />\n                                    </Item>\n                                </Grid>\n                                <Grid item xs={12} md={6} sx={{position: 'relative'}}>\n                                    <Item sx={rightCodeBox}>\n                                        <LiveEditor />\n                                    </Item>\n                                    <CopyButton onClick={handleToast} code={code01} />\n                                </Grid>\n                            </LiveProvider>\n                        </Grid>\n                    </Box>\n                    <Box className='bottom-last'></Box>\n                </Box>\n                <Box className='top-button' onClick={handleScrollTop}>TOP</Box>\n            </Box>\n        </>\n    );\n};\n\nexport default MainWebGridPage;"],"names":["_ref","code","open","setOpen","useState","handleClick","handleClose","event","reason","action","_jsx","_Fragment","children","IconButton","size","color","onClick","CloseIcon","fontSize","_jsxs","Button","variant","sx","position","right","bottom","backgroundColor","boxShadow","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomleftRadius","textTransform","copyCode","navigator","clipboard","writeText","then","console","log","document","queryCommandSupported","alert","textarea","createElement","value","style","top","left","body","appendChild","focus","select","execCommand","removeChild","e","error","Snackbar","autoHideDuration","onClose","message","Item","styled","Paper","theme","palette","mode","typography","body2","padding","spacing","text","secondary","leftComponentBox","border","height","overflowY","display","justifyContent","alignItems","textAlign","rightCodeBox","scope","Box","Toolbar","Grid","DataGrid","code01","props","React","window","scrollTo","behavior","toast","setToast","className","flexGrow","container","LiveProvider","item","xs","md","LivePreview","LiveError","LiveEditor","CopyButton","handleToast"],"sourceRoot":""}